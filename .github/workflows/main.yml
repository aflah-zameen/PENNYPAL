name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # ---------------------------
      # Build Backend with Maven
      # ---------------------------
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Backend
        run: mvn -B -f backend/pennypal/pom.xml clean package -DskipTests

      # ---------------------------
      # Build Angular Frontend
      # ---------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install & Build Frontend
        run: |
          cd frontend
          npm install
          npm run build --prod

      # ---------------------------
      # Build & Push Docker Images
      # ---------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-backend:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-frontend:latest

      # ---------------------------
      # Deploy to Azure VM
      # ---------------------------
      - name: Deploy on Azure VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            echo "Pulling latest Docker images..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-frontend:latest

            echo "Stopping old containers..."
            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true

            echo "Starting new containers..."
            docker run -d --name backend -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-backend:latest
            docker run -d --name frontend -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/pennypal-frontend:latest
